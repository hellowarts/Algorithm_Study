#include <iostream>
#include <queue>
#define MAX_SIZE 1001

using namespace std;

int N, M, V;
bool c[MAX_SIZE];
int map[MAX_SIZE][MAX_SIZE];

void DFS(int x);
void BFS(int start);

int main(void) {
	cin >> N >> M >> V;
		
	int a,b;
	for(int i=0; i<M; i++) {
		cin >> a >> b;
		map[a][b] = map[b][a] = 1;
	}
	
	DFS(V);
	printf("\n");
	BFS(V);
	
	return 0;
}

void DFS(int x){
	if(c[x]) return;
	c[x] = true;
	cout << x << ' ';
	
	for(int i=1; i<=N; i++) {
		if(!c[i] && map[x][i]) DFS(i);
	}
}

void BFS(int start){
	queue<int> q;
	q.push(start);
	c[start] = false;
	
	while(!q.empty()) {
		int x = q.front();
		q.pop();
		cout << x << ' ';
		for(int i=1; i<=N; i++) {
			if(c[i] && map[x][i]) {
				q.push(i);
				c[i] = false;
			}
		}
	}
}