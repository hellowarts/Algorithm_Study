#include <iostream>
#define MAX_SIZE 51

using namespace std;

void DFS(int x, int y);

int T, cnt = 0;
int M,N,K;

int dx[4] = { 1,0,-1,0 };
int dy[4] = { 0,1,0,-1 };

int map[MAX_SIZE][MAX_SIZE];
bool v[MAX_SIZE][MAX_SIZE];

int main(void) {
	cin >> T;
	for (int k = 0; k < T; k++) {
		cin >> M >> N >> K;

		int a, b;
		for (int i = 0; i < K; i++) {
			cin >> a >> b;
			map[b][a] = 1;
		}
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < M; j++) {
				if (map[i][j] && !v[i][j]) {
					cnt++;
					DFS(j, i);
				}
			}
		}
		cout << cnt << endl;
		cnt = 0;

		for (int i = 0; i < N; i++) {
			for (int j = 0; j < M; j++) {
				v[i][j] = false;
				map[i][j] = 0;
			}
		}
	}
}

void DFS(int x, int y) {
	v[y][x] = true;
	
	int ny, nx;
	for (int i = 0; i < 4; i++) {
		ny = y + dy[i];
		nx = x + dx[i];

		if (0 <= nx && nx < M && 0 <= ny && ny < N) {
			if (map[ny][nx] && !v[ny][nx]) DFS(nx, ny);
		}
	}
}