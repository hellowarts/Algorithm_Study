#include <iostream>
#include <queue>
#include <vector>
#include <cstring>
#define MAX_SIZE 20001

using namespace std;

void BFS(int start);
int chGraph();

int K, V, E;

vector<int> map[MAX_SIZE];
int v[MAX_SIZE] = {0,}; 
int color; // 1은 빨강 2는 검정

int main(void) {
	cin >> K;
	for (int k = 0; k < K; k++) {
		cin >> V >> E;

		int a, b;
		for (int i = 0; i < E; i++) {
			cin >> a >> b;
			map[a].push_back(b);
			map[b].push_back(a);
		}

		for (int i = 0; i < V; i++) {
			if (v[i] == 0) BFS(i);
		}

		if (chGraph() == 1) {
			cout << "YES" << endl;
		}
		else {
			cout << "NO" << endl;
		}

		memset(v, 0, sizeof(v));
		for (int i = 0; i <= V; i++) {
			map[i].clear();
		}
	}
}

void BFS(int start) {
	queue<int> q;
	color = 1;
	v[start] = color;
	q.push(start);
	
	int x,y;
	while (!q.empty()) {
		x = q.front();
		q.pop();

		if (v[x] == 1) {
			color = 2;
		}
		else if (v[x] == 2) {
			color = 1;
		}
		for (int i = 0; i < map[x].size(); i++) {
			y = map[x][i];
			if (v[y] == 0) {
				q.push(y);
				v[y] = color;
			}
		}
	}
}

int chGraph() {
	for (int i = 0; i < V; i++) {
		for (int j = 0; j < map[i].size(); j++) {
			if (v[i] == v[map[i][j]]) return 0;
		}
	}
	return 1;
}