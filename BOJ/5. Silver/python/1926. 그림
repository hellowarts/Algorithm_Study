import sys
def BFS():
    global N, M
    count = 0
    while queue:
        count += 1
        y, x = queue.pop(0)
        for dx, dy in dic:
            nx, ny = x+dx, y+dy
            if nx<0 or ny<0 or nx>=M or ny>=N: continue
            if visited[ny][nx] or not Map[ny][nx]: continue
            queue.append((ny, nx))
            visited[ny][nx] = 1
    picture.append(count)
            
N, M = map(int, sys.stdin.readline().strip().split())
Map = [list(map(int, sys.stdin.readline().strip().split())) for _ in range(N)]
visited = [[0 for _ in range(M)] for _ in range(N)]
dic = [(1,0), (0,1), (-1,0), (0,-1)]
queue = []
picture = []

for i in range(N):
    for j in range(M):
        if not Map[i][j] or visited[i][j]: continue
        queue.append((i,j))
        visited[i][j] = 1
        BFS()
if len(picture) == 0:
    print(0)
    print(0)
else:   
    print(len(picture))
    print(max(picture))
